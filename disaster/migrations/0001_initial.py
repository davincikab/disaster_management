# Generated by Django 3.1.1 on 2020-10-06 16:00

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Basin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('area', models.FloatField(blank=True, null=True)),
                ('perimeter', models.FloatField(blank=True, null=True)),
                ('lbasin_field', models.FloatField(blank=True, db_column='lbasin_', null=True)),
                ('lbasin_id', models.FloatField(blank=True, null=True)),
                ('boundc_field', models.FloatField(blank=True, db_column='boundc_', null=True)),
                ('boundc_id', models.FloatField(blank=True, null=True)),
                ('bound', models.IntegerField(blank=True, null=True)),
                ('basin_gejo', models.FloatField(blank=True, null=True)),
                ('item001', models.FloatField(blank=True, null=True)),
                ('basin_1', models.CharField(blank=True, max_length=255, null=True)),
                ('basin_2', models.CharField(blank=True, max_length=255, null=True)),
                ('basin_3', models.CharField(blank=True, max_length=255, null=True)),
                ('gejo', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('area_1', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'basin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Constituencies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('objectid', models.FloatField(blank=True, null=True)),
                ('st_area_sh', models.FloatField(blank=True, null=True)),
                ('constituen', models.CharField(blank=True, max_length=255, null=True)),
                ('county', models.CharField(blank=True, max_length=255, null=True)),
                ('population', models.FloatField(blank=True, null=True)),
                ('populati_1', models.IntegerField(blank=True, null=True)),
                ('numberofho', models.CharField(blank=True, max_length=255, null=True)),
                ('averagehou', models.FloatField(blank=True, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
                ('below18', models.FloatField(blank=True, null=True)),
                ('household', models.FloatField(blank=True, null=True)),
                ('households', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'constituencies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hospitals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('fno', models.IntegerField(blank=True, null=True)),
                ('f_name', models.CharField(blank=True, max_length=255, null=True)),
                ('hmis_field', models.IntegerField(blank=True, db_column='hmis_', null=True)),
                ('prov', models.CharField(blank=True, max_length=255, null=True)),
                ('dist', models.CharField(blank=True, max_length=255, null=True)),
                ('division', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_locati', models.CharField(blank=True, max_length=255, null=True)),
                ('long', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('spatial_re', models.CharField(blank=True, max_length=255, null=True)),
                ('f_type', models.IntegerField(blank=True, null=True)),
                ('agency', models.CharField(blank=True, max_length=255, null=True)),
                ('n14', models.CharField(blank=True, max_length=255, null=True)),
                ('n15', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'hospitals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Irrigationschemes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('province', models.CharField(blank=True, max_length=255, null=True)),
                ('district', models.CharField(blank=True, max_length=255, null=True)),
                ('division', models.CharField(blank=True, max_length=255, null=True)),
                ('scheme_nam', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'irrigationschemes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lakevictoria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('lcid', models.CharField(blank=True, max_length=255, null=True)),
                ('landcover', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'lakevictoria',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prischools',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('objectid', models.IntegerField(blank=True, null=True)),
                ('name_of_sc', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, max_length=255, null=True)),
                ('district', models.CharField(blank=True, max_length=255, null=True)),
                ('division', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('sublocatio', models.CharField(blank=True, max_length=255, null=True)),
                ('costituenc', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('acreage', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prischools',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rivernzoia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('osm_id', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('fclass', models.CharField(blank=True, max_length=255, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rivernzoia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('osm_id', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('fclass', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('oneway', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'roads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Secschools',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('objectid', models.IntegerField(blank=True, null=True)),
                ('name_of_sc', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, max_length=255, null=True)),
                ('district', models.CharField(blank=True, max_length=255, null=True)),
                ('division', models.CharField(blank=True, max_length=255, null=True)),
                ('costituenc', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'secschools',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Settlementschemes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('z_field', models.IntegerField(blank=True, db_column='z__', null=True)),
                ('ufi', models.IntegerField(blank=True, null=True)),
                ('uni', models.IntegerField(blank=True, null=True)),
                ('dlat', models.FloatField(blank=True, null=True)),
                ('dlong', models.FloatField(blank=True, null=True)),
                ('lat', models.IntegerField(blank=True, null=True)),
                ('long', models.IntegerField(blank=True, null=True)),
                ('mgrs', models.CharField(blank=True, max_length=255, null=True)),
                ('utm', models.CharField(blank=True, max_length=255, null=True)),
                ('jog', models.CharField(blank=True, max_length=255, null=True)),
                ('fc', models.CharField(blank=True, max_length=255, null=True)),
                ('dsg', models.CharField(blank=True, max_length=255, null=True)),
                ('pc', models.IntegerField(blank=True, null=True)),
                ('cc1', models.CharField(blank=True, max_length=255, null=True)),
                ('adm1', models.IntegerField(blank=True, null=True)),
                ('adm2', models.IntegerField(blank=True, null=True)),
                ('dim', models.IntegerField(blank=True, null=True)),
                ('cc2', models.IntegerField(blank=True, null=True)),
                ('nt', models.CharField(blank=True, max_length=255, null=True)),
                ('lc', models.IntegerField(blank=True, null=True)),
                ('short_form', models.IntegerField(blank=True, null=True)),
                ('generic', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name_field', models.CharField(blank=True, db_column='full_name_', max_length=255, null=True)),
                ('newdlat', models.FloatField(blank=True, null=True)),
                ('newdlong', models.FloatField(blank=True, null=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('district', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_locati', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'settlementschemes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tradingcentres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('objectid', models.IntegerField(blank=True, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
                ('perimeter', models.FloatField(blank=True, null=True)),
                ('town_name', models.CharField(blank=True, max_length=255, null=True)),
                ('town_id', models.FloatField(blank=True, null=True)),
                ('town_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tradingcentres',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Villages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('area', models.FloatField(blank=True, null=True)),
                ('perimeter', models.FloatField(blank=True, null=True)),
                ('kenyavil_field', models.FloatField(blank=True, db_column='kenyavil_', null=True)),
                ('kenyavil_i', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('theme', models.CharField(blank=True, max_length=255, null=True)),
                ('admincode', models.FloatField(blank=True, null=True)),
                ('longdd', models.FloatField(blank=True, null=True)),
                ('latdd', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'villages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Waterpoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('lat_deg', models.FloatField(blank=True, null=True)),
                ('lon_deg', models.FloatField(blank=True, null=True)),
                ('adm1', models.CharField(blank=True, max_length=255, null=True)),
                ('adm2', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_i', models.CharField(blank=True, max_length=255, null=True)),
                ('country_id', models.CharField(blank=True, max_length=255, null=True)),
                ('water_sour', models.CharField(blank=True, max_length=255, null=True)),
                ('water_tech', models.CharField(blank=True, max_length=255, null=True)),
                ('instal_yea', models.FloatField(blank=True, null=True)),
                ('management', models.CharField(blank=True, max_length=255, null=True)),
                ('pay', models.CharField(blank=True, max_length=255, null=True)),
                ('installer', models.CharField(blank=True, max_length=255, null=True)),
                ('status_id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'waterpoints',
                'managed': False,
            },
        ),
    ]
